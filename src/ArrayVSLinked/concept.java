package ArrayVSLinked;

public class concept  {

	public static void main(String[] args) {
		// 어레이리스트 : 인덱스 별로 데이터 저장
		// 링크드리스트 : 노드가 있다 (연결된 고리가 있음)
		
		// 값 추가 (어레이리스트)
		// 새로운 배열을 하나 만들고 해당 인덱스에 값을 넣은 후에 나머지 값을 뒤로 밀어준다
		// 값 삭제
		// 새로운 배열을 만들고 해당 인덱스 값을 지우고 앞으로 밀어줌
		// 공간이 더필요하고, 대용량데이터일때 시간이 많이걸림
		
		// 값추가 (링크드리스트)
		// 19(앞,뒤)->7(앞,뒤)->4(앞,뒤)->27(앞,뒤)->32(앞,뒤)->
		// 19(앞,뒤)->7(앞,뒤)->[8(앞,뒤)]->4(앞,뒤)->..
		// 4앞->7에서 8로, 7뒤->4에서 8로, 8앞->7 8뒤->4
		
		//값 제거
		// 19(앞,뒤)->7(앞,뒤)->4(앞,뒤)->27(앞,뒤)->32(앞,뒤)->
		//4삭제 : 7뒤->4에서 27로, 27앞->4에서 7로
		
		//결론
		//어레이리스트 : 찾기 빠르다, 순서에따라 움직임, 값 삭제, 추가시 배열을 만들어서 공간차지가 심함, 시간이 오래걸림
		//링크드리스트 : 삽입, 삭제에 빠르다, 노드 찾기에는 느림, 순서가 아니라 앞뒤만 판단해서 실행

		
	
	
	}

}
